# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
    # The most common configuration options are documented and commented below.
    # For a complete reference, please see the online documentation at
    # https://docs.vagrantup.com.

    config.vm.network "forwarded_port", guest: 80, host: 8085, host_ip: "127.0.0.1"
    config.vm.network "forwarded_port", guest: 3306, host: 3316, host_ip: "127.0.0.1"
  
    # Create a public network, which generally matched to bridged network.
    # Bridged networks make the machine appear as another physical device on
    # your network.
    # config.vm.network "public_network"
  
    # Share an additional folder to the guest VM. The first argument is
    # the path on the host to the actual folder. The second argument is
    # the path on the guest to mount the folder. And the optional third
    # argument is a set of non-required options.
    config.vm.synced_folder "..", "/var/www/html"
    config.vm.synced_folder "..", "/vagrant"
    
    config.vm.provider "docker" do |docker, override|
        # docker doesnt use boxes
        override.vm.box = nil
    
        # this is where your Dockerfile lives
        docker.build_dir = "."
    
        # Make sure it sets up ssh with the Dockerfile
        # Vagrant is pretty dependent on ssh
        override.ssh.insert_key = true
        docker.has_ssh = true
    
        # Configure Docker to allow access to more resources
        docker.privileged = true
      end

    config.vm.provision "shell", inline: <<-SHELL
      set -e # Exit immediately if a simple command exits with a non-zero status
      set -x # Print the command before executing it

      sudo add-apt-repository -y ppa:ondrej/php
      sudo apt-get update
      sudo DEBIAN_FRONTEND=noninteractive apt-get install -y php-phalcon5 php8.1-phalcon5
      # at the time of writing this automatically installed:
      # ii  php-common                   2:93+ubuntu22.04.1+deb.sury.org+2       all          Common files for PHP packages
      # ii  php-phalcon5                 5.1.2-1+ubuntu22.04.1+deb.sury.org+2    arm64        full-stack PHP framework delivered as a C-extension
      # ii  php-psr                      1.2.0-5+ubuntu22.04.1+deb.sury.org+1    arm64        PSR interfaces for PHP
      # ii  php8.1-cli                   8.1.17-1+ubuntu22.04.1+deb.sury.org+1   arm64        command-line interpreter for the PHP scripting language
      # ii  php8.1-common                8.1.17-1+ubuntu22.04.1+deb.sury.org+1   arm64        documentation, examples and common module for PHP
      # ii  php8.1-opcache               8.1.17-1+ubuntu22.04.1+deb.sury.org+1   arm64        Zend OpCache module for PHP
      # ii  php8.1-phalcon5              5.1.2-1+ubuntu22.04.1+deb.sury.org+2    arm64        full-stack PHP framework delivered as a C-extension
      # ii  php8.1-phpdbg                8.1.17-1+ubuntu22.04.1+deb.sury.org+1   arm64        server-side, HTML-embedded scripting language (PHPDBG binary)
      # ii  php8.1-readline              8.1.17-1+ubuntu22.04.1+deb.sury.org+1   arm64        readline module for PHP
      # ii  php8.2-cli                   8.2.4-1+ubuntu22.04.1+deb.sury.org+1    arm64        command-line interpreter for the PHP scripting language
      # ii  php8.2-common                8.2.4-1+ubuntu22.04.1+deb.sury.org+1    arm64        documentation, examples and common module for PHP
      # ii  php8.2-opcache               8.2.4-1+ubuntu22.04.1+deb.sury.org+1    arm64        Zend OpCache module for PHP
      # ii  php8.2-phpdbg                8.2.4-1+ubuntu22.04.1+deb.sury.org+1    arm64        server-side, HTML-embedded scripting language (PHPDBG binary)
      # ii  php8.2-psr                   1.2.0-5+ubuntu22.04.1+deb.sury.org+1    arm64        PSR interfaces for PHP
      # ii  php8.2-readline              8.2.4-1+ubuntu22.04.1+deb.sury.org+1    arm64        readline module for PHP
      # Additionally we need:
      sudo DEBIAN_FRONTEND=noninteractive apt-get install -y php8.2-common php8.2-curl php8.2-dev php8.2-fpm php8.2-mysql php8.2-zip apache2

      sudo debconf-set-selections <<< "mysql-server mysql-server/root_password password r00tme"
      sudo debconf-set-selections <<< "mysql-server mysql-server/root_password_again password r00tme"
      sudo DEBIAN_FRONTEND=noninteractive apt-get install -y mysql-server-8.0

      sudo cp /vagrant/apache2-default /etc/apache2/sites-enabled/000-default.conf
      sudo a2enmod alias rewrite proxy proxy_fcgi setenvif
      sudo a2enconf php8.2-fpm
      sudo phpenmod phalcon
      sudo systemctl restart apache2 php8.2-fpm
      sudo systemctl start mysql
  
      mysqladmin create --show-warnings=false cola -u root -pr00tme
      mysql -u root -pr00tme cola < /vagrant/docs/database/schema.sql
  
      sudo curl -sS http://getcomposer.org/installer | php
      sudo mv composer.phar /usr/local/bin/composer

      # locate infrastructure
      sudo DEBIAN_FRONTEND=noninteractive apt-get install -y locate
      sudo updatedb.findutils

      cd /vagrant/
      composer install
      composer outdated
      cp -n app/config/config.vagrant.default.php app/config/config.php
      php8.1 app/cli.php
    SHELL
  
  end
  